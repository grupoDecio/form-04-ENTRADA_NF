function createDataset(fields, constraints, sortFields) { log.info("Digte Public Form - @@@ Inicio Dataset ds_dpf_iniciaSolicitacao.js"); var dataset = DatasetBuilder.newDataset(); var user = ""; var password = ""; var company = getValue("WKCompany"); var processCode = ""; var atividadeDestino = ""; var userSolicitante = ""; var cardData = []; var attachments = []; var serverUrl = ""; var codigoFormularioPublico = ""; var enviarParaTelaConsulta = ""; var telaConsultaURL = ""; var paginaCustomizadaURL = ""; var mensagemConclusao = ""; var datasetFormulario = ""; var idFormularioConfiguracoes = ""; var tempImgFolder = ""; var userLocale = 'pt_BR'; var isIdentityEnabled = ""; var status = ""; var cStatusBase64 = ""; var anexoOpcao = ""; if (constraints != null) { for (var i = 0; i < constraints.length; i++) { if (constraints[i].fieldName == "f") { cardData.push(JSON.parse(constraints[i].initialValue)); /* Ex.: {'field':'campo1', 'value': 'Valor do campo'} */ } else if (constraints[i].fieldName == "a") { attachments.push(JSON.parse(constraints[i].initialValue)); /* Ex.: {'fileName':'file1.txt', 'description': 'Arquivo'} */ } else if (constraints[i].fieldName == "su" && constraints[i].initialValue != "") { serverUrl = constraints[i].initialValue; } else if (constraints[i].fieldName == "co" && constraints[i].initialValue != "") { codigoFormularioPublico = constraints[i].initialValue; } else if (constraints[i].fieldName == "userLocale" && constraints[i].initialValue != "") { userLocale = constraints[i].initialValue; } else if (constraints[i].fieldName == "isIdentityEnabled" && constraints[i].initialValue != "") { isIdentityEnabled = constraints[i].initialValue; } else if (constraints[i].fieldName == "st" && constraints[i].initialValue != "") { cStatusBase64 = constraints[i].initialValue; } else if (constraints[i].fieldName == "anexoOpcao" && constraints[i].initialValue != "") { anexoOpcao = constraints[i].initialValue; } } var cCodForm = DatasetFactory.createConstraint("codigoFormularioPublico", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST); var dsConfig = DatasetFactory.getDataset("dpf_configuracoes", null, [cCodForm], null); if (dsConfig != undefined && dsConfig != null && dsConfig.rowsCount > 0) { processCode = dsConfig.getValue(0, "codigoProcesso") + ""; atividadeDestino = dsConfig.getValue(0, "atividadeInicial") + ""; user = dsConfig.getValue(0, "userStartProcessLogin") + ""; userSolicitante = dsConfig.getValue(0, "userStartProcessMatricula") + ""; enviarParaTelaConsulta = dsConfig.getValue(0, "enviarParaTelaConsulta") + ""; paginaCustomizadaURL = dsConfig.getValue(0, "paginaCustomizadaURL") + ""; telaConsultaURL = dsConfig.getValue(0, "telaConsultaURL") + ""; mensagemConclusao = dsConfig.getValue(0, "mensagemConclusao") + ""; datasetFormulario = dsConfig.getValue(0, "datasetFormulario") + ""; idFormularioConfiguracoes = dsConfig.getValue(0, "metadata#parent_id") + ""; var valor = dsConfig.getValue(0, "senhaStartProcess") + ""; var str = new java.lang.String(valor); var asBytes = java.util.Base64.getDecoder().decode(str); var password = new java.lang.String(asBytes, "utf-8"); } /* gera codigo desencriptado da status base64 */ var aux = new java.lang.String(cStatusBase64); try{ var asBytes = java.util.Base64.getDecoder().decode(aux); cStatus = new java.lang.String(asBytes, "utf-8"); } catch(e) { cStatus = aux; } /* valida Anexos */ if (cStatus != "" && cStatus != null){ var consCodigoFormularioPublico = DatasetFactory.createConstraint("co", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST); var consStatus = DatasetFactory.createConstraint("st", cStatusBase64, cStatusBase64, ConstraintType.MUST); var constr = [consCodigoFormularioPublico,consStatus]; var dsAnexoStatus = DatasetFactory.getDataset("ds_dpf_getListaAnexo", null, constr, null); if (dsAnexoStatus != null && dsAnexoStatus != undefined && dsAnexoStatus.rowsCount > 0) { for (var j = 0; j < dsAnexoStatus.rowsCount; j++) { if ( dsAnexoStatus.getValue(j, "obrigatorio") == "sim" && ( anexoOpcao == "" || (anexoOpcao != "" && anexoOpcao == dsAnexoStatus.getValue(j, "anexoNome")))) { var lAchouAnexoStatus = false; for (var i = 0; i < attachments.length; i++) { /* verificas se tipo de documento foi encontrato pelo nome */ if (attachments[i].fileName.indexOf("___CODDOC_" + dsAnexoStatus.getValue(j, "tipoDocumentoCodigo") + "___") > -1){ lAchouAnexoStatus = true; } } if (lAchouAnexoStatus == false){ dataset.addColumn("message"); dataset.addRow([objLocale['dsStartProcessSoap-message-falha-Falta-Anexo-' + userLocale] + dsAnexoStatus.getValue(j,"anexoDescricao")]); return dataset; } } } } } /* valida Anexos */ /* PREPARANDO PARAMETROS PARA CHAMADA DO WEBSERVICE */ var cUser = DatasetFactory.createConstraint("user", user, "", ConstraintType.MUST), cPass = DatasetFactory.createConstraint("password", password, "", ConstraintType.MUST), cComp = DatasetFactory.createConstraint("company", company, "", ConstraintType.MUST), cPCode = DatasetFactory.createConstraint("processCode", processCode, "", ConstraintType.MUST), cAtiv = DatasetFactory.createConstraint("atividadeDestino", atividadeDestino, "", ConstraintType.MUST), cUserS = DatasetFactory.createConstraint("userSolicitante", userSolicitante, "", ConstraintType.MUST), cURL = DatasetFactory.createConstraint("serverUrl", serverUrl, "", ConstraintType.MUST), cLocale = DatasetFactory.createConstraint("userLocale", userLocale, "", ConstraintType.MUST), constr = new Array(cUser, cPass, cComp, cPCode, cAtiv, cUserS, cURL, cLocale); log.info("Digte Public Form - @@ idFormularioConfiguracoes: " + idFormularioConfiguracoes); tempImgFolder = getTempImgFolder(idFormularioConfiguracoes, company); /* acha id da pasta de upload */ log.info("Digte Public Form - @@ tempImgFolder: " + tempImgFolder); if (tempImgFolder == -1) { log.info("Digte Public Form - @@ Erro ao executar rotina para upload de Arquivo Anexo. Mensagem: Pata Digte Temp Upload"); dataset.addColumn("message"); dataset.addRow([objLocale['dsStartProcessSoap-message-falha-TempUpload-' + userLocale]]); return dataset; } for (var i = 0; i < cardData.length; i++) { var cField = DatasetFactory.createConstraint("field", JSON.stringify(cardData[i]), "", ConstraintType.MUST); constr.push(cField); } try { for (var i = 0; i < attachments.length; i++) { var cAttach = DatasetFactory.createConstraint("attachment", JSON.stringify(attachments[i]), "", ConstraintType.MUST); constr.push(cAttach); } } catch (e) { log.info("Digte Public Form - @@ Erro ao executar rotina para upload de Arquivo Anexo. Mensagem: " + e.message); dataset.addColumn("message"); dataset.addRow([objLocale['uploadToAreaUser-error-' + userLocale]]); return dataset; } var dsStartProcessSoap = DatasetFactory.getDataset("ds_dpf_startProcessSoap", null, constr, null); if (dsStartProcessSoap != null && dsStartProcessSoap != undefined && dsStartProcessSoap.rowsCount > 0) { if (dsStartProcessSoap.getValue(0, "message") != undefined) { var message = dsStartProcessSoap.getValue(0, "message"); dataset.addColumn("message"); if (message.indexOf("Erro ao salvar dados de form") >= 0) { dataset.addRow([message]); } else { dataset.addRow([objLocale['dsStartProcessSoap-message-falha-' + userLocale] + "(" + message + ")"]); } return dataset; } else if (dsStartProcessSoap.getValue(0, "iProcess") != undefined) { var iProcess = dsStartProcessSoap.getValue(0, "iProcess"); dataset.addColumn("solicitacao"); dataset.addColumn("solicitacaoCode"); dataset.addColumn("targetTypeInsert"); dataset.addColumn("urlView"); dataset.addColumn("codStatusDestino"); dataset.addColumn("urlInsertTarget"); dataset.addColumn("urlCustomizedTarget"); dataset.addColumn("conclusionMessage"); var cString = DatasetFactory.createConstraint("stringValue", iProcess, iProcess, ConstraintType.MUST); var dsEncode = DatasetFactory.getDataset("ds_dpf_converter_string_to_base64", null, [cString], null); var solicitacaoCode = ""; if (dsEncode != undefined && dsEncode != null && dsEncode.rowsCount > 0) { solicitacaoCode = dsEncode.getValue(0, "encoded"); } dataset.addRow([iProcess + "", solicitacaoCode, enviarParaTelaConsulta, telaConsultaURL,"","",paginaCustomizadaURL,mensagemConclusao]); /* Movimenta Anexos para a pasta */ if (cStatus != "" && cStatus != null && dsAnexoStatus != null && dsAnexoStatus != undefined && dsAnexoStatus.rowsCount > 0){ var cCompanyId = DatasetFactory.createConstraint("processAttachmentPK.companyId", company, company, ConstraintType.MUST); var cProcessInstanceId = DatasetFactory.createConstraint("processAttachmentPK.processInstanceId", iProcess, iProcess, ConstraintType.MUST); var dsAnexoSolicitacao = DatasetFactory.getDataset("processAttachment", null, [cCompanyId,cProcessInstanceId], null); if (dsAnexoSolicitacao != undefined && dsAnexoSolicitacao != null && dsAnexoSolicitacao.rowsCount > 0) { for (var a = 0; a < dsAnexoSolicitacao.rowsCount; a++) { var iDocumentoId = parseInt(dsAnexoSolicitacao.getValue(a, "documentId")); var iVersion = parseInt(dsAnexoSolicitacao.getValue(a, "version")); var docDto = docAPI.getDocumentVersion(iDocumentoId, iVersion); var iDocumentType = docDto.getDocumentType(); if (iDocumentType == 7) { var cfileName = docDto.getPhisicalFile(); var cAnexoCampoNomePasta = ""; var cAnexoCampoNomeSubpasta = ""; for (var j = 0; j < dsAnexoStatus.rowsCount; j++) { if ( cfileName.indexOf("___CODDOC_" + dsAnexoStatus.getValue(j, "tipoDocumentoCodigo") + "___") > -1 && dsAnexoStatus.getValue(j, "anexoPastaRaizIdDocument") != "null" && dsAnexoStatus.getValue(j, "anexoPastaRaizIdDocument") != null && dsAnexoStatus.getValue(j, "anexoPastaRaizIdDocument") != ""){ for (var c = 0; c < cardData.length; c++) { if (cardData[c].field == dsAnexoStatus.getValue(j, "anexoCampoNomePasta")) { cAnexoCampoNomePasta = cardData[c].value; } if (cardData[c].field == dsAnexoStatus.getValue(j, "anexoCampoNomeSubpasta")) { cAnexoCampoNomeSubpasta = cardData[c].value; } } /* inicio - ciar pasta do anexo baseada em campo do formulario */ var iParentDocumentId = 0; if (cAnexoCampoNomePasta != "" && cAnexoCampoNomePasta != null && cAnexoCampoNomePasta != "null"){ iParentDocumentId = getFolderAndDocumentbyName(cAnexoCampoNomePasta,"1",dsAnexoStatus.getValue(j, "anexoPastaRaizIdDocument"), company); if (iParentDocumentId == -1){ try { var dtoFolder = docAPI.newDocumentDto(); iParentDocumentId = parseInt(dsAnexoStatus.getValue(j, "anexoPastaRaizIdDocument")); dtoFolder.setDocumentDescription(cAnexoCampoNomePasta); dtoFolder.setDocumentType("1"); dtoFolder.setParentDocumentId(iParentDocumentId); dtoFolder.setDocumentTypeId(""); var folder = docAPI.createFolder(dtoFolder, null, null); iParentDocumentId = folder.getDocumentId(); } catch (e) { log.error("Digte Public Form - @@@@@@@@@@@@@@@@@@@@@@ Problemas na criação da pasta do anexo:" + e); } } if (cAnexoCampoNomeSubpasta != "" && cAnexoCampoNomeSubpasta != null && cAnexoCampoNomeSubpasta != "null"){ var iPastaCampo = iParentDocumentId; iParentDocumentId = getFolderAndDocumentbyName(cAnexoCampoNomeSubpasta,"1",iPastaCampo, company); if (iParentDocumentId == -1){ try { var dtoFolder = docAPI.newDocumentDto(); iParentDocumentId = parseInt(iPastaCampo); dtoFolder.setDocumentDescription(cAnexoCampoNomeSubpasta); dtoFolder.setDocumentType("1"); dtoFolder.setParentDocumentId(iParentDocumentId); dtoFolder.setDocumentTypeId(""); var folder = docAPI.createFolder(dtoFolder, null, null); iParentDocumentId = folder.getDocumentId(); } catch (e) { log.error("Digte Public Form - @@@@@@@@@@@@@@@@@@@@@@ Problemas na criação da subpasta do anexo:" + e); } } } } else{ /* caso nao tenha pasta padrão irá para pastas raiz*/ iParentDocumentId = parseInt(dsAnexoStatus.getValue(j, "anexoPastaRaizIdDocument")); } /* fim - ciar pasta do anexo baseada em campo do formulario */ /* inicio - ciar pasta especifica para o anexo com o nome do anexo */ if ( dsAnexoStatus.getValue(j, "criarSubPasta") == "sim" && iParentDocumentId != 0) { var iParentDocumentIdAnexo = getFolderAndDocumentbyName(dsAnexoStatus.getValue(j, "anexoDescricao"),"1",iParentDocumentId, company); if (iParentDocumentIdAnexo == -1){ try { var dtoFolder = docAPI.newDocumentDto(); dtoFolder.setDocumentDescription(dsAnexoStatus.getValue(j, "anexoDescricao")); dtoFolder.setDocumentType("1"); dtoFolder.setParentDocumentId(iParentDocumentId); dtoFolder.setDocumentTypeId(""); var folder = docAPI.createFolder(dtoFolder, null, null); iParentDocumentId = folder.getDocumentId(); } catch (e) { log.error("Digte Public Form - @@@@@@@@@@@@@@@@@@@@@@ Problemas na criação da subpasta do anexo:" + e); } } } /* fim - ciar pasta especifica para o anexo com o nome do anexo */ /* inicio - verificar expiracao e validade do anexo ex 1___CODDOC_rg-verso___2020-5-8-12-18-40-299 */ var docName = cfileName; var tipoDocumentoCodigo = ""; docName = docName.substring(docName.indexOf("___CODDOC_") + 10); docName = docName.substring(0, docName.indexOf("___")); tipoDocumentoCodigo = docName; var lExpira = false; var qtDiasValidade = 0; var validationStartDate = 0; var notificationDays = 0; var today = new Date(); var expirationDate = new Date(); var nomeAnexo = dsAnexoStatus.getValue(j,"anexoNome"); var c1 = DatasetFactory.createConstraint("tipoDocumentoCodigo", tipoDocumentoCodigo, tipoDocumentoCodigo, ConstraintType.MUST); var dsTipodocumento = DatasetFactory.getDataset("dpf_tipo_documento", null, [c1], null); if (dsTipodocumento != undefined && dsTipodocumento != null && dsTipodocumento.rowsCount > 0) { nomeAnexo = dsTipodocumento.getValue(0, "tipoDocumentoNome") != "" && dsTipodocumento.getValue(0, "tipoDocumentoNome") != null ? dsTipodocumento.getValue(0, "tipoDocumentoNome") : nomeAnexo; lExpira = dsTipodocumento.getValue(0, "expira") == "sim" ? true : false; qtDiasValidade = dsTipodocumento.getValue(0, "qtDiasValidade") != "0" && dsTipodocumento.getValue(0, "qtDiasValidade") != "0" ? parseInt(dsTipodocumento.getValue(0, "qtDiasValidade")) : 0; notificationDays = dsTipodocumento.getValue(0, "qtDiasNotificacao") != "0" && dsTipodocumento.getValue(0, "qtDiasNotificacao") != "0" ? parseInt(dsTipodocumento.getValue(0, "qtDiasNotificacao")) : 0; validationStartDate = java.util.Calendar.getInstance().getTime(); expirationDate.setDate(today.getDate() + qtDiasValidade); } /* inicio - verificar expiracao e validade do anexo */ /* inicio - ciar documento do anexo */ docAPI.copyDocumentToUploadArea(iDocumentoId, iVersion); docDto.setParentDocumentId(iParentDocumentId); var attachArray = new java.util.ArrayList(); var mainAttach = docAPI.newAttachment(); mainAttach.setFileName(docDto.getPhisicalFile()); mainAttach.setPrincipal(true); mainAttach.setAttach(false); attachArray.add(mainAttach); docDto.setActiveVersion(true); docDto.setDocumentDescription(nomeAnexo); docDto.setColleagueId(getValue("WKUser")); docDto.setPublisherId(getValue("WKUser")); if (lExpira == true){ docDto.setExpires(true); docDto.setValidationStartDate(validationStartDate); docDto.setExpirationDate(expirationDate); } try { var doc = docAPI.createDocument(docDto, attachArray, null, null,null); } catch (e) { log.error("Problemas na criação do documento:" + e); } /* fim - ciar documento do anexo */ } } } } } } /* Movimenta Anexos para a pasta */ return dataset; } } else { dataset.addColumn("message"); dataset.addRow([objLocale['dsStartProcessSoap-falha-' + userLocale]]); return dataset; } } log.info("Digte Public Form - @@@ Fim Dataset ds_dpf_iniciaSolicitacao.js"); return dataset; } function uploadToAreaUser(user, password, company, newDocumentId, newDocumentVersion, userSolicitante, serverUrl) { var cUser = DatasetFactory.createConstraint("user", user, "", ConstraintType.MUST), cPass = DatasetFactory.createConstraint("password", password, "", ConstraintType.MUST), cComp = DatasetFactory.createConstraint("company", company, "", ConstraintType.MUST), cDoc = DatasetFactory.createConstraint("documentId", newDocumentId, "", ConstraintType.MUST), cVersion = DatasetFactory.createConstraint("version", newDocumentVersion, "", ConstraintType.MUST), cColleague = DatasetFactory.createConstraint("colleagueId", userSolicitante, "", ConstraintType.MUST), cURL = DatasetFactory.createConstraint("serverUrl", serverUrl, "", ConstraintType.MUST), constr = new Array(cUser, cPass, cComp, cDoc, cVersion, cColleague, cURL); var dsCopy = DatasetFactory.getDataset("ds_dpf_copyDocumentToUploadAreaSoap", null, constr, null); if (dsCopy != null && dsCopy != undefined && dsCopy.rowsCount > 0) { if (dsCopy.getValue(0, "fileName") != undefined) { return dsCopy.getValue(0, "fileName"); } else { return -1; } } } function getTempImgFolder(idFormularioConfiguracoes, company) { var idPastaConfiguracoes = getParentDocumentId(idFormularioConfiguracoes, company); var cParentDocumentId = DatasetFactory.createConstraint("parentDocumentId", idPastaConfiguracoes, idPastaConfiguracoes, ConstraintType.MUST); var cCompany = DatasetFactory.createConstraint("documentPK.companyId", company, company, ConstraintType.MUST); var cActive = DatasetFactory.createConstraint("activeVersion", "true", "true", ConstraintType.MUST); var cDocumentType = DatasetFactory.createConstraint("documentType", "1", "1", ConstraintType.MUST); var dsDocument = DatasetFactory.getDataset("document", ["documentPK.documentId"], [cParentDocumentId, cCompany, cActive, cDocumentType], null); if (dsDocument != null && dsDocument != undefined && dsDocument.rowsCount > 0) { var tempUploadFolder = dsDocument.getValue(0, "documentPK.documentId") + ""; } else { var tempUploadFolder = -1; } return tempUploadFolder; } function getFolderAndDocumentbyName(pName, pDocumentType, pParentDocumentId, pCompany) { var cDescription = DatasetFactory.createConstraint("documentDescription", pName, pName, ConstraintType.MUST); var cParentDocumentId = DatasetFactory.createConstraint("parentDocumentId", pParentDocumentId, pParentDocumentId, ConstraintType.MUST); var cCompany = DatasetFactory.createConstraint("documentPK.companyId", pCompany, pCompany, ConstraintType.MUST); var cDocumentType = DatasetFactory.createConstraint("documentType", pDocumentType, pDocumentType, ConstraintType.MUST); var cActive = DatasetFactory.createConstraint("activeVersion", "true", "true", ConstraintType.MUST); var dsDocument = DatasetFactory.getDataset("document", ["documentPK.documentId"], [cDescription,cParentDocumentId, cCompany, cActive, cDocumentType], null); if (dsDocument != null && dsDocument != undefined && dsDocument.rowsCount > 0) { var iFolderDocumentId = parseInt(dsDocument.getValue(0, "documentPK.documentId") + ""); } else { var iFolderDocumentId = -1; } return iFolderDocumentId; } function getParentDocumentId(documentPkId, company) { var cDocumentId = DatasetFactory.createConstraint("documentPK.documentId", documentPkId, documentPkId, ConstraintType.MUST); var cCompany = DatasetFactory.createConstraint("documentPK.companyId", company, company, ConstraintType.MUST); var cActive = DatasetFactory.createConstraint("activeVersion", "true", "true", ConstraintType.MUST); var dsDocument = DatasetFactory.getDataset("document", ["parentDocumentId"], [cDocumentId, cCompany, cActive], null); if (dsDocument != null && dsDocument != undefined && dsDocument.rowsCount > 0) { var parentDocumentId = dsDocument.getValue(0, "parentDocumentId") + ""; } return parentDocumentId; } var objLocale = { 'dsStartProcessSoap-message-falha-pt_BR': 'Falha ao criar solicitação', 'dsStartProcessSoap-message-falha-en_US': 'Failed to create request', 'dsStartProcessSoap-message-falha-es': 'Error al crear solicitud', 'dsStartProcessSoap-message-falha-TempUpload-pt_BR': 'Pasta Temporária Digte Temp Upload não foi encontrada', 'dsStartProcessSoap-message-falha-TempUpload-en_US': 'Temporary folder Digte Temp Upload was not found', 'dsStartProcessSoap-message-falha-TempUpload-es': 'No se encontró la carpeta temporal Digte Temp Upload', 'dsStartProcessSoap-message-falha-Falta-Anexo-pt_BR': 'Anexo obrigatório não foi enviado - Anexo:' , 'dsStartProcessSoap-message-falha-Falta-Anexo-en_US': 'Attachment dont send it - Attachment:', 'dsStartProcessSoap-message-falha-Falta-Anexo-es': 'Adjunto no fue envidado - Adjunto:', 'uploadToAreaUser-error-pt_BR': 'Falha ao criar solicitação do Anexo. Verifique a segurança da pasta onde está armazenado o formulário do processo. O usuário de integração precisa ter acesso de Modificação.', 'uploadToAreaUser-error-en_US': 'Failed to create Attachment request. Check the security of the folder where the process form is stored. The integration user must have Modification access.', 'uploadToAreaUser-error-es': 'Error al crear la solicitud del Anexo. Compruebe la seguridad de la carpeta donde se almacena el formulario de proceso. El usuario de integración debe tener acceso de modificación.', 'dsStartProcessSoap-falha-pt_BR': 'Falha ao criar solicitação. Normalmente o problema está na definição do responsável da segunda atividade do fluxo. Veja se mecanismos de atribuição foi definido corretamente.', 'dsStartProcessSoap-falha-en_US': 'Failed to create request. Usually the problem lies in the definition of the person responsible for the second flow activity. See if assignment mechanisms were set correctly.', 'dsStartProcessSoap-falha-es': 'Error al crear solicitud. Normalmente el problema está en la definición del responsable de la segunda actividad del flujo. Vea si los mecanismos de asignación se han definido correctamente.', }