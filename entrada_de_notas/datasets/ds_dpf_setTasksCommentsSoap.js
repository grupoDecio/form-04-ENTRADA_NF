function createDataset(fields, constraints, sortFields) { log.info("Digte Public Form - @@@ Inicio Dataset ds_dpf_setTasksCommentsSoap.js"); var dataset = DatasetBuilder.newDataset(); var user = ""; var password = ""; var company = ""; var processInstanceId = ""; var userPost = ""; var threadSequence = ""; var serverUrl = ""; var observacao = ""; var mensagem = ""; var userLocale = 'pt_BR'; var connection = null; var isr = null; var la = null; try { if (constraints != null) { for (var i = 0; i < constraints.length; i++) { if (constraints[i].fieldName == "user" && constraints[i].initialValue != "") { user = constraints[i].initialValue; } else if (constraints[i].fieldName == "password" && constraints[i].initialValue != "") { password = constraints[i].initialValue; } else if (constraints[i].fieldName == "company" && constraints[i].initialValue != "") { company = constraints[i].initialValue; } else if (constraints[i].fieldName == "serverUrl" && constraints[i].initialValue != "") { serverUrl = constraints[i].initialValue; } else if (constraints[i].fieldName == "processInstanceId" && constraints[i].initialValue != "") { processInstanceId = constraints[i].initialValue; } else if (constraints[i].fieldName == "userPost" && constraints[i].initialValue != "") { userPost = constraints[i].initialValue; } else if (constraints[i].fieldName == "threadSequence" && constraints[i].initialValue != "") { threadSequence = constraints[i].initialValue; } else if (constraints[i].fieldName == "observacao" && constraints[i].initialValue != "") { observacao = constraints[i].initialValue; } else if (constraints[i].fieldName == "userLocale" && constraints[i].initialValue != "") { userLocale = constraints[i].initialValue; } } var message = ""; if (user == "") { message = objLocale['param-user-' + userLocale]; } else if (password == "") { message = objLocale['param-password-' + userLocale]; } else if (company == "") { message = objLocale['param-company-' + userLocale]; } else if (serverUrl == "") { message = objLocale['param-serverUrl-' + userLocale]; } else if (processInstanceId == "") { message = objLocale['param-processInstanceId-' + userLocale]; } else if (userPost == "") { message = objLocale['param-userPost-' + userLocale]; } else if (threadSequence == "") { message = objLocale['param-threadSequence-' + userLocale]; } if (message != "") { dataset.addColumn("message"); dataset.addRow([message]); return dataset; } log.info('Digte Public Form - chamada rest: ' + serverUrl + '/webdesk/ECMWorkflowEngineService?wsdl'); var url = new java.net.URL(serverUrl + "/webdesk/ECMWorkflowEngineService?wsdl"); var connection = url.openConnection(); connection.setDoOutput(true); log.info('Digte Public Form - conexao realizada'); var postData = new java.lang.StringBuilder(); postData.append('<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.workflow.ecm.technology.totvs.com/">'); postData.append("<soapenv:Header/>"); postData.append("<soapenv:Body>"); postData.append("<ws:setTasksComments>"); postData.append("<username>" + user + "</username>"); postData.append("<password>" + password + "</password>"); postData.append("<companyId>" + company + "</companyId>"); postData.append("<processInstanceId>" + processInstanceId + "</processInstanceId>"); postData.append("<userId>" + userPost + "</userId>"); postData.append("<threadSequence>" + threadSequence + "</threadSequence>"); postData.append("<comments>" + observacao + "</comments>"); postData.append("</ws:setTasksComments>"); postData.append("</soapenv:Body>"); postData.append("</soapenv:Envelope>"); connection.setRequestMethod("POST"); var SOAPAction = "setTasksComments"; connection.setRequestProperty("Content-Type", "text/xml; charset=utf-8"); connection.setRequestProperty("SOAPAction", SOAPAction); var os = connection.getOutputStream(); os.write(postData.toString().getBytes()); os.flush(); var retorno = connection.getResponseCode(); var isr = new java.io.InputStreamReader(connection.getInputStream()); var la = new java.io.BufferedReader(isr); var responseString = ""; var outputString = ""; var posIni = postData.indexOf("<password>") + 10; var posFim = postData.indexOf("</password>"); var senha = postData.substring(posIni,posFim); var mensagem = new java.lang.String(postData); var posIni = mensagem.indexOf("<password>") + 10; var posFim = mensagem.indexOf("</password>"); var senha = mensagem.substring(posIni,posFim); mensagem = mensagem.replace("<password>" + senha + "</password>", "<password>************</password>" ); log.info('Digte Public Form - xml: >>>>>>> '+mensagem); /* Write the SOAP message response to a String. */ while ((responseString = la.readLine()) != null) { outputString = outputString + responseString; } var dbf = javax.xml.parsers.DocumentBuilderFactory.newInstance(); var db = dbf.newDocumentBuilder(); var stringReader = new java.io.StringReader(outputString); var xml = db.parse( new org.xml.sax.InputSource(stringReader)); var result = xml.getElementsByTagName("result"); var resultContent = result.item(0).getTextContent().trim(); stringReader.close(); dataset.addColumn("result"); dataset.addRow([resultContent]); return dataset; } else { dataset.addColumn("message"); dataset.addRow([objLocale['parametros-' + userLocale]]); return dataset; } } catch (e) { log.info("Digte Public Form - @@ Catch exceção ao executar setTasksComments " + e); dataset.addColumn("message"); dataset.addRow([objLocale['setTasksComments-catch-' + userLocale] + ' ' + e]); return dataset; } finally { if(isr != null) isr.close(); if(la != null) la.close(); if(connection != null) connection.disconnect(); } log.info("Digte Public Form - @@@ Fim Dataset ds_dpf_setTasksCommentsSoap.js"); return dataset; } var objLocale = { 'parametros-pt_BR': '@@ Não foram informados os parâmetros.', 'parametros-en_US': '@@ The parameters were not entered.', 'parametros-es': '@@ No se han informado de los parámetros.', 'setTasksComments-catch-pt_BR': '@@ Catch exceção ao executar setTasksComments', 'setTasksComments-catch-en_US': '@@ Catch Exception when executing setTasksComments', 'setTasksComments-catch-es': '@@ Catch excepción al ejecutar setTasksComments', 'param-user-pt_BR': '@@ Parametro |user| não informado.', 'param-user-en_US': '@@ Parameter |user| uninformed.', 'param-user-es': '@@ Parámetro |user| no informado.', 'param-password-pt_BR': '@@ Parametro |password| não informado.', 'param-password-en_US': '@@ Parameter |password| uninformed.', 'param-password-es': '@@ Parámetro |password| no informado.', 'param-company-pt_BR': '@@ Parametro |company| não informado.', 'param-company-en_US': '@@ Parameter |company| uninformed.', 'param-company-es': '@@ Parámetro |company| no informado.', 'param-serverUrl-pt_BR': '@@ Parametro |serverUrl| não informado.', 'param-serverUrl-en_US': '@@ Parameter |serverUrl| uninformed.', 'param-serverUrl-es': '@@ Parámetro |serverUrl| no informado.', 'param-processInstanceId-pt_BR': '@@ Parametro |processInstanceId| não informado.', 'param-processInstanceId-en_US': '@@ Parameter |processInstanceId| uninformed.', 'param-processInstanceId-es': '@@ Parámetro |processInstanceId| no informado.', 'param-userPost-pt_BR': '@@ Parametro |userPost| não informado.', 'param-userPost-en_US': '@@ Parameter |userPost| uninformed.', 'param-userPost-es': '@@ Parámetro |userPost| no informado.', 'param-threadSequence-pt_BR': '@@ Parametro |threadSequence| não informado.', 'param-threadSequence-en_US': '@@ Parameter |threadSequence| uninformed.', 'param-threadSequence-es': '@@ Parámetro |threadSequence| no informado.', }