function createDataset(fields, constraints, sortFields) { log.info("Digte Public Form - @@@ Inicio Dataset ds_dpf_getListaAnexo.js"); var dataset = DatasetBuilder.newDataset(); var idProcesso = ""; var codigoFormularioPublico = ""; var processInstanceIdCode = ""; var dsAnexos = []; var dsAnexosDownload = []; var downlaod = false; var company = getValue("WKCompany"); var processInstanceId = ""; var userSolicitante = ""; var user = ""; var password = ""; var serverUrl = ""; dataset.addColumn("anexoOrdem"); dataset.addColumn("anexoNome"); dataset.addColumn("anexoDescricao"); dataset.addColumn("tipoDocumentoCodigo"); dataset.addColumn("tipoDocumentoNome"); dataset.addColumn("anexoPastaRaizIdDocument"); dataset.addColumn("anexoCampoNomePasta"); dataset.addColumn("anexoCampoNomeSubpasta"); dataset.addColumn("criarSubPasta"); dataset.addColumn("uploadStatus"); dataset.addColumn("obrigatorio"); dataset.addColumn("documentIdAnexo"); dataset.addColumn("versionAnexo"); dataset.addColumn("filenameAnexo"); dataset.addColumn("permiteEscolhaGrupoAnexo"); dataset.addColumn("descricaoEscolhaGrupoAnexo"); dataset.addColumn("tamanho"); dataset.addColumn("altura"); dataset.addColumn("largura"); dataset.addColumn("bytes"); dataset.addColumn("anexoDownload"); dataset.addColumn("urlDocumento"); if (constraints != null) { for (var i = 0; i < constraints.length; i++) { if (constraints[i].fieldName == "codigoFormularioPublico" && constraints[i].initialValue != "") { codigoFormularioPublico = constraints[i].initialValue; } if (constraints[i].fieldName == "co" && constraints[i].initialValue != "") { codigoFormularioPublico = constraints[i].initialValue; } if (constraints[i].fieldName == "st" && constraints[i].initialValue != "") { status = constraints[i].initialValue; } if (constraints[i].fieldName == "pi" && constraints[i].initialValue != "") { processInstanceIdCode = constraints[i].initialValue; } } var cCodForm = DatasetFactory.createConstraint("codigoFormularioPublico", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST); var dsConfig = DatasetFactory.getDataset("dpf_configuracoes", null, [cCodForm], null); if (dsConfig != undefined && dsConfig != null && dsConfig.rowsCount > 0) { userSolicitante = dsConfig.getValue(0, "userStartProcessMatricula") + ""; var valor = dsConfig.getValue(0, "senhaStartProcess") + ""; var str = new java.lang.String(valor); var asBytes = java.util.Base64.getDecoder().decode(str); password = new java.lang.String(asBytes, "utf-8"); user = dsConfig.getValue(0, "userStartProcessLogin") + ""; serverUrl = dsConfig.getValue(0, "serverUrl") + ""; } /* gera codigo desencriptado da solicitação */ if (processInstanceIdCode != "") { var cString = DatasetFactory.createConstraint("stringValue", processInstanceIdCode, processInstanceIdCode, ConstraintType.MUST); var dsDecode = DatasetFactory.getDataset("ds_dpf_converter_string_to_base64", null, [cString], null); if (dsDecode != undefined && dsDecode != null && dsDecode.rowsCount > 0) { processInstanceId = dsDecode.getValue(0, "decoded"); } } /* gera codigo desencriptado da status base64 */ var str = new java.lang.String(status); /* o status deve vir em base 64*/ try{ var asBytes = java.util.Base64.getDecoder().decode(str); var decodedStatus = new java.lang.String(asBytes, "utf-8"); } catch(e){ var decodedStatus = str; } var cStatus = DatasetFactory.createConstraint("atividadeOrdem", decodedStatus, decodedStatus, ConstraintType.MUST); var cCodigoFormularioPublico = DatasetFactory.createConstraint("codigoFormularioPublico", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST); var constr = [cCodigoFormularioPublico,cStatus]; var dsStatus = DatasetFactory.getDataset("dpf_cadastro_status", null, constr, ["atividadeOrdem"]); /* Lendo registros filhos */ if (dsStatus != null && dsStatus != undefined && dsStatus.rowsCount > 0) { if ( dsStatus.getValue(0, "ativaUpload") == "nao" && dsStatus.getValue(0, "ativaDownload") == "nao") { return dataset; } if (processInstanceId != "") { /* valida se o processo esta na ativiade certa pra apresentar os anexos existentes */ var lAtividadeCorrente = false; var documentId = dsStatus.getValue(0, "metadata#id"); var documentVersion = dsStatus.getValue(0, "metadata#version"); var c1 = DatasetFactory.createConstraint("tablename", "tbAtividade" ,"tbAtividade", ConstraintType.MUST); var c2 = DatasetFactory.createConstraint("metadata#id", documentId, documentId, ConstraintType.MUST); var c3 = DatasetFactory.createConstraint("metadata#version", documentVersion, documentVersion, ConstraintType.MUST); var constraintsFilhos = new Array(c1, c2, c3); var dsAtidadesStatus= DatasetFactory.getDataset("dpf_cadastro_status", null, constraintsFilhos, ["atividadeId"]); if (dsAtidadesStatus != null && dsAtidadesStatus != undefined && dsAtidadesStatus.rowsCount > 0){ for (var j = 0; j < dsAtidadesStatus.rowsCount; j++) { var atividadeCorrente = getStateAnexo(user, password, company, processInstanceId, serverUrl, userSolicitante); var cAtividade = dsAtidadesStatus.getValue(j, "atividadeId"); if (parseInt(atividadeCorrente) == parseInt(cAtividade)){ lAtividadeCorrente = true; break; } } } else{ lAtividadeCorrente = true; } if (lAtividadeCorrente == false){ return dataset; } /* valida se o processo esta na ativiade certa pra apresentar os anexo */ var cCompanyId = DatasetFactory.createConstraint("processAttachmentPK.companyId", company, company, ConstraintType.MUST); var cProcessInstanceId = DatasetFactory.createConstraint("processAttachmentPK.processInstanceId", processInstanceId, processInstanceId, ConstraintType.MUST); var dsAnexoSolicitacao = DatasetFactory.getDataset("processAttachment", null, [cCompanyId,cProcessInstanceId], null); for (var a = 0; a < dsAnexoSolicitacao.rowsCount; a++) { var iDocumentoId = parseInt(dsAnexoSolicitacao.getValue(a, "documentId")); var iVersion = parseInt(dsAnexoSolicitacao.getValue(a, "version")); try{ var docDto = docAPI.getDocumentVersion(iDocumentoId, iVersion); var iDocumentType = docDto.getDocumentType(); } catch(e) { var docDto = 0; var iDocumentType = 0; } if (iDocumentType == 2 || iDocumentType == 7) { var fileName = docDto.getPhisicalFile(); try{ var urlDocumento = fluigAPI.getDocumentService().getDownloadURL(parseInt(iDocumentoId)); } catch(e){ var urlDocumento = ""; } if (fileName.indexOf("___CODDOC_") > -1){ dsAnexos.push(JSON.parse('{"fileName": "' + fileName + '", "documentIdAnexo": ' + iDocumentoId + ', "versionAnexo":' + iVersion + ', "documentDescription": "' + docDto.getDocumentDescription() + '", "urlDocumento": "' + urlDocumento + '" }')); } if ( fileName.indexOf("___CODDOC_") == -1) /* indica que o documenot foi incluid via area logada ou foi incluido anteriormente */ { dsAnexosDownload.push(JSON.parse('{"fileName": "' + fileName + '", "documentIdAnexo": ' + iDocumentoId + ', "versionAnexo":' + iVersion + ', "documentDescription": "' + docDto.getDocumentDescription() + '", "urlDocumento": "' + urlDocumento + '", "downlaod": "' + true + '" }')); } } } } for (var i = 0; i < dsStatus.rowsCount; i++) { var documentId = dsStatus.getValue(i, "metadata#id"); var documentVersion = dsStatus.getValue(i, "metadata#version"); var c1 = DatasetFactory.createConstraint("tablename", "tbAnexosStatus" ,"tbAnexosStatus", ConstraintType.MUST); var c2 = DatasetFactory.createConstraint("metadata#id", documentId, documentId, ConstraintType.MUST); var c3 = DatasetFactory.createConstraint("metadata#version", documentVersion, documentVersion, ConstraintType.MUST); var constraintsFilhos = new Array(c1, c2, c3); var lAnexo = false; var documentId = 0; var version = 0; var fileName = ""; var urlDocumento = ""; /*Busca o dataset&*/ var datasetAenxos = DatasetFactory.getDataset("dpf_cadastro_status", null, constraintsFilhos, ["anexoNome","anexoOrdem"]); if ( datasetAenxos != null && datasetAenxos != undefined && datasetAenxos.rowsCount > 0 && dsStatus.getValue(0, "ativaUpload") != "nao"){ for (var j = 0; j < datasetAenxos.rowsCount; j++) { documentId = 0; version = 0; fileName = ""; /*se o anexo ja existe ele não será solicitado novamente*/ lAnexo = false; if (dsAnexos != undefined && dsAnexos != null && dsAnexos.length > 0) { for (var a = 0; a < dsAnexos.length; a++) { if (dsAnexos[a].fileName.indexOf("___CODDOC_" + datasetAenxos.getValue(j,"tipoDocumentoCodigo") + "___") > -1){ documentId = dsAnexos[a].documentIdAnexo; version = dsAnexos[a].versionAnexo; fileName = dsAnexos[a].fileName; urlDocumento = dsAnexos[a].urlDocumento; lAnexo = true; break; } } } /*se o anexo ja existe ele não será solicitado novamente*/ var tamanho = "nao"; var altura = ""; var largura = ""; var bytes = ""; if (datasetAenxos.getValue(j,"tipoDocumentoCodigo") != null && datasetAenxos.getValue(j,"tipoDocumentoCodigo") != ""){ var c1 = DatasetFactory.createConstraint("tipoDocumentoCodigo", datasetAenxos.getValue(j,"tipoDocumentoCodigo"), datasetAenxos.getValue(j,"tipoDocumentoCodigo"), ConstraintType.MUST); var dsTipodocumento = DatasetFactory.getDataset("dpf_tipo_documento", null, [c1], null); if (dsTipodocumento != null && dsTipodocumento.rowsCount > 0){ tamanho = dsTipodocumento.getValue(0,"tamanho"); largura = dsTipodocumento.getValue(0,"largura"); altura = dsTipodocumento.getValue(0,"altura"); bytes = dsTipodocumento.getValue(0,"bytes"); } } /*Adiciona os valores nas colunas respectivamente.*/ dataset.addRow(new Array( datasetAenxos.getValue(j,"anexoOrdem"), datasetAenxos.getValue(j,"anexoNome"), datasetAenxos.getValue(j,"anexoDescricao"), datasetAenxos.getValue(j,"tipoDocumentoCodigo"), datasetAenxos.getValue(j,"tipoDocumentoNome"), datasetAenxos.getValue(j,"anexoPastaRaizIdDocument"), datasetAenxos.getValue(j,"anexoCampoNomePasta"), datasetAenxos.getValue(j,"anexoCampoNomeSubpasta"), datasetAenxos.getValue(j,"criarSubPasta"), lAnexo, datasetAenxos.getValue(j,"obrigatorio"), documentId, version, fileName, dsStatus.getValue(i,"permiteEscolhaGrupoAnexo"), dsStatus.getValue(i,"descricaoEscolhaGrupoAnexo"), tamanho, altura, largura, bytes, false, urlDocumento )); } } if (dsStatus.getValue(i,"ativaDownload") == "sim"){ if (dsAnexosDownload != undefined && dsAnexosDownload != null && dsAnexosDownload.length > 0) { var cont = 0; for (var ae = 0; ae < dsAnexosDownload.length; ae++){ cont = cont + 1; /*Adiciona os valores nas colunas respectivamente.*/ documentId = dsAnexosDownload[ae].documentIdAnexo; version = dsAnexosDownload[ae].versionAnexo; fileName = dsAnexosDownload[ae].fileName; documentDescription = dsAnexosDownload[ae].documentDescription; urlDocumento = dsAnexosDownload[ae].urlDocumento; downlaod = dsAnexosDownload[ae].downlaod; var tipoDocumentoCodigo = ""; /* dpf é um tipo de documento interno do public form para arqiuvos de upload via public form */ if (fileName.indexOf("___CODDOC_") > -1){ var docName = new java.lang.String(fileName); /* precisa ser um string para ter metodo substring */ docName = docName.substring(docName.indexOf("___CODDOC_") + 10); docName = docName.substring(0, docName.indexOf("___")); tipoDocumentoCodigo = docName; } /* dpf é um tipo de documento interno do public form para arqiuvos de upload via public form */ dataset.addRow(new Array( 1500 * cont, documentDescription, documentDescription, tipoDocumentoCodigo, documentDescription, "", "", "", "", true, "nao", documentId, version, fileName, "nao", "nao", 0, 0, 0, 0, downlaod, /* anexoDownload */ urlDocumento)); } } } } } else { dataset.addColumn("message"); dataset.addRow(["@@ Código do Formulário Público não encontrado"]); return dataset; } } else { dataset.addColumn("message"); dataset.addRow(["@@ Formulário não encontrado"]); return dataset; } log.info("Digte Public Form - @@@ Fim Dataset ds_dpf_getListaAnexo.js"); return dataset; } function getStateAnexo(user, password, company, processInstanceId, serverUrl, userSolicitante) { var cUser = DatasetFactory.createConstraint("user", user, "", ConstraintType.MUST), cPass = DatasetFactory.createConstraint("password", password, "", ConstraintType.MUST), cComp = DatasetFactory.createConstraint("company", company, "", ConstraintType.MUST), cPInstance = DatasetFactory.createConstraint("processInstanceId", processInstanceId, "", ConstraintType.MUST), cUserId = DatasetFactory.createConstraint("userId", userSolicitante, "", ConstraintType.MUST), cURL = DatasetFactory.createConstraint("serverUrl", serverUrl, "", ConstraintType.MUST), constr = new Array(cUser, cPass, cComp, cPInstance, cUserId, cURL); var dsGetAllActiveStatesSoap = DatasetFactory.getDataset("ds_dpf_getAllActiveStatesSoap", null, constr, null); if (dsGetAllActiveStatesSoap != null && dsGetAllActiveStatesSoap != undefined && dsGetAllActiveStatesSoap.rowsCount > 0) { if (dsGetAllActiveStatesSoap.getValue(0, "state") != undefined) { return dsGetAllActiveStatesSoap.getValue(0, "state"); } else { return -1; } } }