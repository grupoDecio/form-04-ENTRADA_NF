function defineStructure(){} function onSync(lastSyncDate){} function createDataset(fields, constraints, sortFields){ log.info("Digte Public Form - @@@ Inicio Dataset ds_dpf_getDocumentParseBase64.js"); var dataset = DatasetBuilder.newDataset(); var idDocument = ""; importPackage(java.net); importPackage(java.io); try { if(constraints != null){ for(var i = 0; i < constraints.length; i++){ if (constraints[i].fieldName == "idDocument" && constraints[i].initialValue != "") idDocument = constraints[i].initialValue; } var dto = fluigAPI.getDocumentService().getActive(parseInt(idDocument)); var iSize = dto.getPhisicalFileSize(); var bytesBuffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 8192); var url = new URL(fluigAPI.getDocumentService().getDownloadURL(parseInt(idDocument))); var is = url.openStream(); var baos = new ByteArrayOutputStream(iSize); var len = 0; while ((len = is.read(bytesBuffer, 0, bytesBuffer.length)) != -1) { baos.write(bytesBuffer, 0, len); } var content = baos.toByteArray(); var resultBase64 = java.util.Base64.getEncoder().encodeToString(content); dataset.addColumn("idDocument"); dataset.addColumn("documentBase64"); dataset.addRow([idDocument, resultBase64]); return dataset; }else{ dataset.addColumn("message"); dataset.addRow([e.message]); return dataset; } }catch (e) { log.info("Digte Public Form - @@ Catch exceção ao executar ds_dpf_getDocumentParseBase64.js " + e.message); dataset.addColumn("message"); dataset.addRow([e.message]); return dataset; } } function onMobileSync(user){}