function createDataset(fields, constraints, sortFields) { log.info("Digte Public Form - @@@ Inicio Dataset ds_dpf_getListaStatusProcesso.js"); var dataset = DatasetBuilder.newDataset(); var idProcesso = ""; var codigoFormularioPublico = ""; var statusBase64 = ""; var status = ""; var jornada = ""; var atividadeOrdemAnterior = ""; var descricaoAnterior = ""; var linkAcaoAnterior = ""; var atividadeOrdemProximo = ""; var descricaoProximo = ""; var linkAcaoProximo = ""; var operacao = ""; var processInstanceId = ""; var processInstanceIdCode = ""; var cardData = []; var company = getValue("WKCompany"); var serverUrl = ""; var userSolicitante = ""; var password = ""; var user = ""; if (constraints != null) { for (var i = 0; i < constraints.length; i++) { if (constraints[i].fieldName == "co" && constraints[i].initialValue != "") { codigoFormularioPublico = constraints[i].initialValue; } if (constraints[i].fieldName == "st" && constraints[i].initialValue != "") { statusBase64 = constraints[i].initialValue; } if (constraints[i].fieldName == "cj" && constraints[i].initialValue != "") { jornada = constraints[i].initialValue; } if (constraints[i].fieldName == "op" && constraints[i].initialValue != "") { operacao = constraints[i].initialValue; } if (constraints[i].fieldName == "pi" && constraints[i].initialValue != "") { processInstanceIdCode = constraints[i].initialValue; } if (constraints[i].fieldName == "su" && constraints[i].initialValue != "") { serverUrl = constraints[i].initialValue; } } var cString = DatasetFactory.createConstraint("stringValue", processInstanceIdCode, processInstanceIdCode, ConstraintType.MUST); var dsDecode = DatasetFactory.getDataset("ds_dpf_converter_string_to_base64", null, [cString], null); if (dsDecode != undefined && dsDecode != null && dsDecode.rowsCount > 0) { processInstanceId = dsDecode.getValue(0, "decoded"); } var cActive = DatasetFactory.createConstraint("metadata#active", "true", "true", ConstraintType.MUST); var cCodigoFormularioPublico = DatasetFactory.createConstraint("codigoFormularioPublico", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST), constr = []; constr = [cCodigoFormularioPublico,cActive]; /* todas etapas do processo publico */ var dsStatus = DatasetFactory.getDataset("dpf_cadastro_status", null, constr, ['atividadeOrdem']); if (dsStatus != null && dsStatus != undefined && dsStatus.rowsCount > 0) { dataset.addColumn("atividadeOrdem"); dataset.addColumn("linkAcao"); dataset.addColumn("descricao"); dataset.addColumn("help"); dataset.addColumn("nomeBotaoAcao"); dataset.addColumn("posicaoBotaoAcao"); dataset.addColumn("acao"); dataset.addColumn("nomeBotaoAcao"); dataset.addColumn("corBotaoAcao"); dataset.addColumn("ativaBotaoAcao"); dataset.addColumn("atividadeOrdemAnterior"); dataset.addColumn("descricaoAnterior"); dataset.addColumn("linkAcaoAnterior"); dataset.addColumn("atividadeOrdemProximo"); dataset.addColumn("descricaoProximo"); dataset.addColumn("linkAcaoProximo"); dataset.addColumn("ativaUpload"); /* se informar 1 etapa especifica */ if (operacao == "1" && statusBase64 != null && statusBase64 != "") { var str = new java.lang.String(statusBase64); /* o status deve vir em base 64*/ try { var asBytes = java.util.Base64.getDecoder().decode(str); var status = new java.lang.String(asBytes, "utf-8"); } catch (e) { var status = str; } /*Bucas etapa anterior caso seja informado Jornada*/ /* retornar todoas as etapas de uma jornada */ if (jornada != null && jornada != "") { var cCodForm = DatasetFactory.createConstraint("codigoFormularioPublico", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST); var cCodJornada = DatasetFactory.createConstraint("codJornada", jornada, jornada, ConstraintType.MUST); var dsJornada = DatasetFactory.getDataset("dpf_cadastro_jornada", null, [cCodForm,cCodJornada], null); if (dsJornada != undefined && dsJornada != null && dsJornada.rowsCount > 0) { var documentId = dsJornada.getValue(0, "metadata#id"); var documentVersion = dsJornada.getValue(0, "metadata#version"); var c1 = DatasetFactory.createConstraint("tablename", "tbJornadaStatus", "tbJornadaStatus", ConstraintType.MUST); var c2 = DatasetFactory.createConstraint("metadata#id", documentId, documentId, ConstraintType.MUST); var c3 = DatasetFactory.createConstraint("metadata#version", documentVersion, documentVersion, ConstraintType.MUST); var c4 = DatasetFactory.createConstraint("metadata#active", "true", "true", ConstraintType.MUST); var constrStatus = [c1, c2, c3, c4]; var dsStatusJornada = DatasetFactory.getDataset("dpf_cadastro_jornada", null, constrStatus, ['jornadaOrdem']); /*ordenasr pelo que foi definido na jornada*/ for (var i = 0; i < dsStatusJornada.rowsCount; i++) { if (dsStatusJornada.getValue(i,"atividadeOrdem") == status){ /* se nao for o ultimo pega o proximo */ if ((i + 1) < dsStatusJornada.rowsCount) { for (var s = 0; s < dsStatus.rowsCount; s++){ if (dsStatusJornada.getValue(i+1,"atividadeOrdem") == dsStatus.getValue(s,"atividadeOrdem") ){ atividadeOrdemProximo = dsStatus.getValue(s,"atividadeOrdem"); var str = new java.lang.String(atividadeOrdemProximo); cStatusDestinoAsB64 = java.util.Base64.getEncoder().encodeToString(str.getBytes("utf-8")); linkAcaoProximo = dsStatus.getValue(s,"linkAcao"); descricaoProximo = dsStatus.getValue(s,"descricao"); break; } } } break; } for (var s = 0; s < dsStatus.rowsCount; s++){ if (dsStatusJornada.getValue(i,"atividadeOrdem") == dsStatus.getValue(s,"atividadeOrdem") ){ /* Grava anterior*/ atividadeOrdemAnterior = dsStatus.getValue(s,"atividadeOrdem"); var str = new java.lang.String(atividadeOrdemAnterior); atividadeOrdemAnterior = java.util.Base64.getEncoder().encodeToString(str.getBytes("utf-8")); linkAcaoAnterior = dsStatus.getValue(s,"linkAcao"); descricaoAnterior = dsStatus.getValue(s,"descricao"); break; } } } } } for (var s = 0; s < dsStatus.rowsCount; s++) { if ( status == dsStatus.getValue(s,"atividadeOrdem") ) { dataset.addRow([dsStatus.getValue(s,"atividadeOrdem"), dsStatus.getValue(s,"linkAcao"), dsStatus.getValue(s,"descricao"), dsStatus.getValue(s,"help"), dsStatus.getValue(s,"nomeBotaoAcao"), dsStatus.getValue(s,"posicaoBotaoAcao"), dsStatus.getValue(s,"acao"), dsStatus.getValue(s,"nomeBotaoAcao"), dsStatus.getValue(s,"corBotaoAcao"), dsStatus.getValue(s,"ativaBotaoAcao"), atividadeOrdemAnterior, descricaoAnterior, linkAcaoAnterior, atividadeOrdemProximo, descricaoProximo, linkAcaoProximo, dsStatus.getValue(s,"ativaUpload") ]); } } } /* trazer todas as etpas se a operacao for 2 */ if (operacao == "2") { /* retornar todoas as etapas de uma jornada */ if (jornada != null && jornada != "") { if (processInstanceId != "") { var cCodForm = DatasetFactory.createConstraint("codigoFormularioPublico", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST); var dsConfig = DatasetFactory.getDataset("dpf_configuracoes", null, [cCodForm], null); if (dsConfig != undefined && dsConfig != null && dsConfig.rowsCount > 0) { userSolicitante = dsConfig.getValue(0, "userStartProcessMatricula") + ""; var valor = dsConfig.getValue(0, "senhaStartProcess") + ""; var str = new java.lang.String(valor); var asBytes = java.util.Base64.getDecoder().decode(str); password = new java.lang.String(asBytes, "utf-8"); user = dsConfig.getValue(0, "userStartProcessLogin") + ""; cardData = loadCardData(user, password, company, processInstanceId, serverUrl, userSolicitante); } } var cCodForm = DatasetFactory.createConstraint("codigoFormularioPublico", codigoFormularioPublico, codigoFormularioPublico, ConstraintType.MUST); var cCodJornada = DatasetFactory.createConstraint("codJornada", jornada, jornada, ConstraintType.MUST); var dsJornada = DatasetFactory.getDataset("dpf_cadastro_jornada", null, [cCodForm,cCodJornada], null); if (dsJornada != undefined && dsJornada != null && dsJornada.rowsCount > 0) { var documentId = dsJornada.getValue(0, "metadata#id"); var documentVersion = dsJornada.getValue(0, "metadata#version"); var c1 = DatasetFactory.createConstraint("tablename", "tbJornadaStatus", "tbJornadaStatus", ConstraintType.MUST); var c2 = DatasetFactory.createConstraint("metadata#id", documentId, documentId, ConstraintType.MUST); var c3 = DatasetFactory.createConstraint("metadata#version", documentVersion, documentVersion, ConstraintType.MUST); var c4 = DatasetFactory.createConstraint("metadata#active", "true", "true", ConstraintType.MUST); var constrStatus = [c1, c2, c3, c4]; var dsStatusJornada = DatasetFactory.getDataset("dpf_cadastro_jornada", null, constrStatus, ["jornadaOrdem"]); for (var i = 0; i < dsStatusJornada.rowsCount; i++) { for (var s = 0; s < dsStatus.rowsCount; s++) { if ( dsStatusJornada.getValue(i,"atividadeOrdem") == dsStatus.getValue(s,"atividadeOrdem") ) { var lOkCondicao = true; if (processInstanceId != ""){ /* var documentId = dsJornada.getValue(0, "metadata#id"); var documentVersion = dsJornada.getValue(0, "metadata#version"); var c1 = DatasetFactory.createConstraint("tablename", "tbJornadaStatus", "tbJornadaStatus", ConstraintType.MUST); var c2 = DatasetFactory.createConstraint("metadata#id", documentId, documentId, ConstraintType.MUST); var c3 = DatasetFactory.createConstraint("metadata#version", documentVersion, documentVersion, ConstraintType.MUST); var c4 = DatasetFactory.createConstraint("metadata#active", "true", "true", ConstraintType.MUST); var constrStatus = [c1, c2, c3, c4]; var dsStatusJornada = DatasetFactory.getDataset("dpf_cadastro_jornada", null, constrStatus, null); */ /* valida os campos do formulÃ¡rio para saber se deve entrar nesta etapa */ if ( dsStatusJornada.getValue(i,"campo1") != null && dsStatusJornada.getValue(i,"campo1") != "" || dsStatusJornada.getValue(i,"campo2") != null && dsStatusJornada.getValue(i,"campo2") != "" || dsStatusJornada.getValue(i,"campo3") != null && dsStatusJornada.getValue(i,"campo3") != "") { var campoJornadaCondicao1 = new java.lang.String(); campoJornadaCondicao1 = dsStatusJornada.getValue(i,"campo1") == null ? "" : dsStatusJornada.getValue(i,"campo1"); campoJornadaCondicao1 = campoJornadaCondicao1.toUpperCase(); var campoJornadaCondicao2 = new java.lang.String(); campoJornadaCondicao2 = dsStatusJornada.getValue(i,"campo2") == null ? "" : dsStatusJornada.getValue(i,"campo2"); campoJornadaCondicao2 = campoJornadaCondicao2.toUpperCase(); var campoJornadaCondicao3 = new java.lang.String(); campoJornadaCondicao3 = dsStatusJornada.getValue(i,"campo3") == null ? "" : dsStatusJornada.getValue(i,"campo3"); campoJornadaCondicao3 = campoJornadaCondicao3.toUpperCase(); var cardDataCondicao = []; /* atualizar com valores novos vindo da interface */ for (var ccc = 0; ccc < cardData.length; ccc++) { var condicaoCampo = cardData[ccc]; cardDataCondicao.push(condicaoCampo); } /* atualizar com valores novos vindo da interface */ /* tratamento dos campos adicionais da adimissÃ£o digital */ var camposAdicionais = []; for (var cc = 0; cc < cardDataCondicao.length; cc++) { if (cardDataCondicao[cc].field.indexOf("nomeCampoAdicional___") > -1){ var indexCondicao = cardDataCondicao[cc].field; indexCondicao = indexCondicao.replace("nomeCampoAdicional___",""); indexCondicao = indexCondicao.replace("valorCampoAdicional___",""); indexCondicao = parseInt(indexCondicao); if (camposAdicionais[indexCondicao] != null){ var campo = { "value" : camposAdicionais[indexCondicao].value, "field" : cardDataCondicao[cc].value}; camposAdicionais[indexCondicao] = campo; } else { var campo = { "value" : "", "field" : cardDataCondicao[cc].value}; camposAdicionais[indexCondicao] = campo; } } if (cardDataCondicao[cc].field.indexOf("valorCampoAdicional___") > -1){ var indexCondicao = cardDataCondicao[cc].field; indexCondicao = indexCondicao.replace("nomeCampoAdicional___",""); indexCondicao = indexCondicao.replace("valorCampoAdicional___",""); indexCondicao = parseInt(indexCondicao); if (camposAdicionais[indexCondicao] != null){ var campo = { "value" : cardDataCondicao[cc].value, "field" : camposAdicionais[indexCondicao].field}; camposAdicionais[indexCondicao] = campo; } else { var campo = { "value" : cardDataCondicao[cc].value, "field" : ""}; camposAdicionais[indexCondicao] = campo; } } } for (var cc = 0; cc < camposAdicionais.length; cc++) { if (camposAdicionais[cc] != null){ var campo = {}; campo["field"] = camposAdicionais[cc]["field"]; campo["value"] = camposAdicionais[cc]["value"]; cardDataCondicao.push(campo); } } /* tratamento dos campos adicionais da adimissÃ£o digital */ var campoCardData = new java.lang.String(); for (var c = 0; c < cardDataCondicao.length; c++) { campoCardData = cardDataCondicao[c].field == null ? "" : cardDataCondicao[c].field; campoCardData = campoCardData.toUpperCase(); if (campoCardData == campoJornadaCondicao1){ lOkCondicao = valorCondicaoEtapa(campoCardData,cardDataCondicao[c].value,campoJornadaCondicao1,dsStatusJornada.getValue(i,"operacao1"),dsStatusJornada.getValue(i,"valor1")); if (lOkCondicao == false) break; } if (campoCardData == campoJornadaCondicao2){ lOkCondicao = valorCondicaoEtapa(campoCardData,cardDataCondicao[c].value,campoJornadaCondicao2,dsStatusJornada.getValue(i,"operacao2"),dsStatusJornada.getValue(i,"valor2")); if (lOkCondicao == false) break; } if (campoCardData == campoJornadaCondicao3){ lOkCondicao = valorCondicaoEtapa(campoCardData,cardDataCondicao[c].value,campoJornadaCondicao3,dsStatusJornada.getValue(i,"operacao3"),dsStatusJornada.getValue(i,"valor3")); if (lOkCondicao == false) break; } } } } if (lOkCondicao == true) { dataset.addRow([dsStatus.getValue(s,"atividadeOrdem"), dsStatus.getValue(s,"linkAcao"), dsStatus.getValue(s,"descricao"), dsStatus.getValue(s,"help"), dsStatus.getValue(s,"nomeBotaoAcao"), dsStatus.getValue(s,"posicaoBotaoAcao"), dsStatus.getValue(s,"acao"), dsStatus.getValue(s,"nomeBotaoAcao"), dsStatus.getValue(s,"corBotaoAcao"), dsStatus.getValue(s,"ativaBotaoAcao"), atividadeOrdemAnterior, descricaoAnterior, linkAcaoAnterior, atividadeOrdemProximo, descricaoProximo, linkAcaoProximo, dsStatus.getValue(s,"ativaUpload") ]); } } } } } } else { for (var s = 0; s < dsStatus.rowsCount; s++) { dataset.addRow([dsStatus.getValue(s,"atividadeOrdem"), dsStatus.getValue(s,"linkAcao"), dsStatus.getValue(s,"descricao"), dsStatus.getValue(s,"help"), dsStatus.getValue(s,"nomeBotaoAcao"), dsStatus.getValue(s,"posicaoBotaoAcao"), dsStatus.getValue(s,"acao"), dsStatus.getValue(s,"nomeBotaoAcao"), dsStatus.getValue(s,"corBotaoAcao"), dsStatus.getValue(s,"ativaBotaoAcao"), atividadeOrdemAnterior, descricaoAnterior, linkAcaoAnterior, atividadeOrdemProximo, descricaoProximo, linkAcaoProximo, dsStatus.getValue(s,"ativaUpload") ]); } } } return dataset; } else { dataset.addColumn("message"); dataset.addRow(["@@ Etapa ou Jornada informados nÃ£o encontratados"]); return dataset; } } else { dataset.addColumn("message"); dataset.addRow(["@@ Etapas ou Jornadas do processo pÃºblicos nÃ£o informados para o ds_dpf_getListaStatusProcesso"]); return dataset; } log.info("Digte Public Form - @@@ Fim Dataset ds_dpf_getListaStatusProcesso.js"); return dataset; } function loadCardData(user, password, company, processInstanceId, serverUrl, userSolicitante) { var cUser = DatasetFactory.createConstraint("user", user, "", ConstraintType.MUST), cPass = DatasetFactory.createConstraint("password", password, "", ConstraintType.MUST), cComp = DatasetFactory.createConstraint("company", company, "", ConstraintType.MUST), cPInstance = DatasetFactory.createConstraint("processInstanceId", processInstanceId, "", ConstraintType.MUST), cUserId = DatasetFactory.createConstraint("userId", userSolicitante, "", ConstraintType.MUST), cURL = DatasetFactory.createConstraint("serverUrl", serverUrl, "", ConstraintType.MUST), constr = new Array(cUser, cPass, cComp, cPInstance, cUserId, cURL); var dsGetInstanceCardDataSoap = DatasetFactory.getDataset("ds_dpf_getInstanceCardDataSoap", null, constr, null); var cardData = []; if (dsGetInstanceCardDataSoap != null && dsGetInstanceCardDataSoap != undefined && dsGetInstanceCardDataSoap.rowsCount > 0) { if (dsGetInstanceCardDataSoap.getValue(0, "field") != undefined) { for (var i = 0; i < dsGetInstanceCardDataSoap.rowsCount; i++) { cardData.push({'field': dsGetInstanceCardDataSoap.getValue(i, "field") + '', 'value': dsGetInstanceCardDataSoap.getValue(i, "value") + ''}); } } } return cardData; } function valorCondicaoEtapa(campoForm,valorForm,campo,operacao,valor){ if (campoForm == campo && campo != null && campo != "") { if (operacao == "maior"){ if (!isNaN(valor) && !isNaN(valorForm)){ /* os dois somente tem numeros */ var fValor = parseFloat(valor); var fValorForm = parseFloat(valorForm); return (fValorForm > fValor); } else { return (valorForm > valor); } } if (operacao == "maiorIgual"){ if (!isNaN(valor) && !isNaN(valorForm)){ /* os dois somente tem numeros */ var fValor = parseFloat(valor); var fValorForm = parseFloat(valorForm); return (fValorForm >= fValor); } else { return (valorForm >= valor); } } if (operacao == "menor"){ if (!isNaN(valor) && !isNaN(valorForm)){ /* os dois somente tem numeros */ var fValor = parseFloat(valor); var fValorForm = parseFloat(valorForm); return (fValorForm < fValor); } else { return (valorForm < valor); } } if (operacao == "menorIgual"){ if (!isNaN(valor) && !isNaN(valorForm)){ /* os dois somente tem numeros */ var fValor = parseFloat(valor); var fValorForm = parseFloat(valorForm); return (fValorForm <= fValor); } else { return (valorForm <= valor); } } if (operacao == "igual"){ return (valorForm == valor); } if (operacao == "diferente"){ return (valorForm != valor); } if (operacao == "contem"){ return (valorForm.indexOf(valor) > -1); } if (operacao == "naoContem"){ return (valorForm.indexOf(valor) == -1); } if (operacao == "estaContido"){ var items = valor.split(";"); for (var j = 0; j < items.length; j++) { if (items[j] == valorForm) return true; } return false; } if (operacao == "naoEstaContido"){ var items = valor.split(";"); for (var j = 0; j < items.length; j++) { if (items[j] == valorForm) return false; } return true; } } else return true; }